on:
  push:
    branches: [ main ]

env:
  RELEASE_REVISION: "${{ github.event.pull_request.number }}"
  #KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_CONFIG_DATA1: "docker/1"
  KUBE_NAMESPACE: cex-prod
  REPOSITORY: coins2prod
  REPOSITORY_URL: registry-intl.eu-central-1.aliyuncs.com
  REPOSITORY_LOGIN: "registry@5281954714975321"
  REPOSITORY_PASS: "pKp)f#g2!3UWzUQwQxQIFqB?5esm7vUE"
  POD:  crypto-bridge
  imagePullSecrets: alibaba

name: Create Image and Push to alibaba 
                   
    
jobs:                                            
  release:                                       
    name: Release                                
    runs-on: ubuntu-latest                       
    
    steps:   
    - name: Cancel Previous Runs               
      uses: styfle/cancel-workflow-action@0.4.1
      with:                                    
        access_token: ${{ github.token }} 

    - name: Checkout                                  
      uses: actions/checkout@v2                       
      with:                                           
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Set outputs
      id: vars
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Build, tag, and push the image to cr.selcloud.ru
      id: build-image
      env:
        IMAGE_TAG: latest
      run: |
        # Build a docker container and push it to cr.selcloud.ru
        docker build -t ${{ env.POD }}:${{ env.SHORT_SHA }} -f docker/app/Dockerfile .
        docker image list
        docker login ${{ env.REPOSITORY_URL }} -u ${{ env.REPOSITORY_LOGIN }} -p '${{ env.REPOSITORY_PASS }}'
        echo "docker tag ${{ env.POD }}:${{ env.SHORT_SHA }} ${{ env.REPOSITORY_URL }}/${{ env.REPOSITORY }}/${{ env.POD }}:${{ env.SHORT_SHA }}"
        docker tag ${{ env.POD }}:${{ env.SHORT_SHA }} ${{ env.REPOSITORY_URL }}/${{ env.REPOSITORY }}/${{ env.POD }}:${{ env.SHORT_SHA }}
        echo "Pushing image to cr.selcloud.ru..."
        echo "docker push ${{ env.REPOSITORY_URL }}/${{ env.REPOSITORY }}/${{ env.POD }}:${{ env.SHORT_SHA }}"
        docker push ${{ env.REPOSITORY_URL }}/${{ env.REPOSITORY }}/${{ env.POD }}:${{ env.SHORT_SHA }}
        echo "::set-output name=image::${{ env.REPOSITORY_URL }}}/${{ env.REPOSITORY }}/${{ env.POD }}:${{ env.SHORT_SHA }}"

    - name: Install and configure kubectl
      run: |
            VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
            VERSION="v1.23.6"
            curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
              --progress-bar \
              --location \
              --remote-name
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
            
    - name: Start job to Kubernetes cluster                                                                            
      run:  |  
            cat ${{ env.KUBE_CONFIG_DATA1 }} | base64 -d > cex.yaml                                                                                                      
            kubectl delete -n  ${{ env.KUBE_NAMESPACE }} jobs.batch crypto-bridge-migrations  --kubeconfig=cex.yaml  || true
            kubectl apply -n  ${{ env.KUBE_NAMESPACE }} -f .kube/production/crypto-bridge-migration.job.yaml  --kubeconfig=cex.yaml 
            kubectl apply -n  ${{ env.KUBE_NAMESPACE }} -f .kube/production  --kubeconfig=cex.yaml 
            kubectl rollout -n  ${{ env.KUBE_NAMESPACE }}  restart deployment  ${{ env.POD }}  --kubeconfig=cex.yaml 
            rm -rf cex.yaml 
            rm -rf ${{ env.KUBE_CONFIG_DATA1 }}


